SPRING CONFIG (ConfigFileApplicationListener)

spring.config.name 
配置文件名称，默认为application 
spring.config.location 
配置文件存放位置，默认为classpath目录下

mvc

spring.mvc.async.request-timeout 
设定async请求的超时时间，以毫秒为单位，如果没有设置的话，以具体实现的超时时间为准，比如tomcat的servlet3的话是10秒. 
spring.mvc.date-format 
设定日期的格式，比如dd/MM/yyyy. 
spring.mvc.favicon.enabled 
是否支持favicon.ico，默认为: true 
spring.mvc.ignore-default-model-on-redirect 
在重定向时是否忽略默认model的内容，默认为true 
spring.mvc.locale 
指定使用的Locale. 
spring.mvc.message-codes-resolver-format 
指定message codes的格式化策略(PREFIX_ERROR_CODE,POSTFIX_ERROR_CODE). 
spring.mvc.view.prefix 
指定mvc视图的前缀. 
spring.mvc.view.suffix 
指定mvc视图的后缀.

messages

spring.messages.basename 
指定message的basename，多个以逗号分隔，如果不加包名的话，默认从classpath路径开始，默认: messages 
spring.messages.cache-seconds 
设定加载的资源文件缓存失效时间，-1的话为永不过期，默认为-1 
spring.messages.encoding 
设定Message bundles的编码，默认: UTF-8

mobile

spring.mobile.devicedelegatingviewresolver.enable-fallback 
是否支持fallback的解决方案，默认false 
spring.mobile.devicedelegatingviewresolver.enabled 
是否开始device view resolver，默认为: false 
spring.mobile.devicedelegatingviewresolver.mobile-prefix 
设定mobile端视图的前缀，默认为:mobile/ 
spring.mobile.devicedelegatingviewresolver.mobile-suffix 
设定mobile视图的后缀 
spring.mobile.devicedelegatingviewresolver.normal-prefix 
设定普通设备的视图前缀 
spring.mobile.devicedelegatingviewresolver.normal-suffix 
设定普通设备视图的后缀 
spring.mobile.devicedelegatingviewresolver.tablet-prefix 
设定平板设备视图前缀，默认:tablet/ 
spring.mobile.devicedelegatingviewresolver.tablet-suffix 
设定平板设备视图后缀. 
spring.mobile.sitepreference.enabled 
是否启用SitePreferenceHandler，默认为: true

view

spring.view.prefix 
设定mvc视图的前缀. 
spring.view.suffix 
设定mvc视图的后缀.

resource

spring.resources.add-mappings 
是否开启默认的资源处理，默认为true 
spring.resources.cache-period 
设定资源的缓存时效，以秒为单位. 
spring.resources.chain.cache 
是否开启缓存，默认为: true 
spring.resources.chain.enabled 
是否开启资源 handling chain，默认为false 
spring.resources.chain.html-application-cache 
是否开启h5应用的cache manifest重写，默认为: false 
spring.resources.chain.strategy.content.enabled 
是否开启内容版本策略，默认为false 
spring.resources.chain.strategy.content.paths 
指定要应用的版本的路径，多个以逗号分隔，默认为:[/**] 
spring.resources.chain.strategy.fixed.enabled 
是否开启固定的版本策略，默认为false 
spring.resources.chain.strategy.fixed.paths 
指定要应用版本策略的路径，多个以逗号分隔 
spring.resources.chain.strategy.fixed.version 
指定版本策略使用的版本号 
spring.resources.static-locations 
指定静态资源路径，默认为classpath:[/META-INF/resources/,/resources/, /static/, /public/]以及context:/

multipart

multipart.enabled 
是否开启文件上传支持，默认为true 
multipart.file-size-threshold 
设定文件写入磁盘的阈值，单位为MB或KB，默认为0 
multipart.location 
指定文件上传路径. 
multipart.max-file-size 
指定文件大小最大值，默认1MB 
multipart.max-request-size 
指定每次请求的最大值，默认为10MB

freemarker

spring.freemarker.allow-request-override 
指定HttpServletRequest的属性是否可以覆盖controller的model的同名项 
spring.freemarker.allow-session-override 
指定HttpSession的属性是否可以覆盖controller的model的同名项 
spring.freemarker.cache 
是否开启template caching. 
spring.freemarker.charset 
设定Template的编码. 
spring.freemarker.check-template-location 
是否检查templates路径是否存在. 
spring.freemarker.content-type 
设定Content-Type. 
spring.freemarker.enabled 
是否允许mvc使用freemarker. 
spring.freemarker.expose-request-attributes 
设定所有request的属性在merge到模板的时候，是否要都添加到model中. 
spring.freemarker.expose-session-attributes 
设定所有HttpSession的属性在merge到模板的时候，是否要都添加到model中. 
spring.freemarker.expose-spring-macro-helpers 
设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用 
spring.freemarker.prefer-file-system-access 
是否优先从文件系统加载template，以支持热加载，默认为true 
spring.freemarker.prefix 
设定freemarker模板的前缀. 
spring.freemarker.request-context-attribute 
指定RequestContext属性的名. 
spring.freemarker.settings 
设定FreeMarker keys. 
spring.freemarker.suffix 
设定模板的后缀. 
spring.freemarker.template-loader-path 
设定模板的加载路径，多个以逗号分隔，默认: [“classpath:/templates/”] 
spring.freemarker.view-names 
指定使用模板的视图列表.

velocity

spring.velocity.allow-request-override 
指定HttpServletRequest的属性是否可以覆盖controller的model的同名项 
spring.velocity.allow-session-override 
指定HttpSession的属性是否可以覆盖controller的model的同名项 
spring.velocity.cache 
是否开启模板缓存 
spring.velocity.charset 
设定模板编码 
spring.velocity.check-template-location 
是否检查模板路径是否存在. 
spring.velocity.content-type 
设定ContentType的值 
spring.velocity.date-tool-attribute 
设定暴露给velocity上下文使用的DateTool的名 
spring.velocity.enabled 
设定是否允许mvc使用velocity 
spring.velocity.expose-request-attributes 
是否在merge模板的时候，将request属性都添加到model中 
spring.velocity.expose-session-attributes 
是否在merge模板的时候，将HttpSession属性都添加到model中 
spring.velocity.expose-spring-macro-helpers 
设定是否以springMacroRequestContext的名来暴露RequestContext给Spring’s macro类库使用 
spring.velocity.number-tool-attribute 
设定暴露给velocity上下文的NumberTool的名 
spring.velocity.prefer-file-system-access 
是否优先从文件系统加载模板以支持热加载，默认为true 
spring.velocity.prefix 
设定velocity模板的前缀. 
spring.velocity.properties 
设置velocity的额外属性. 
spring.velocity.request-context-attribute 
设定RequestContext attribute的名. 
spring.velocity.resource-loader-path 
设定模板路径，默认为: classpath:/templates/ 
spring.velocity.suffix 
设定velocity模板的后缀. 
spring.velocity.toolbox-config-location 
设定Velocity Toolbox配置文件的路径，比如 /WEB-INF/toolbox.xml. 
spring.velocity.view-names 
设定需要解析的视图名称.

thymeleaf

spring.thymeleaf.cache 
是否开启模板缓存，默认true 
spring.thymeleaf.check-template-location 
是否检查模板路径是否存在，默认true 
spring.thymeleaf.content-type 
指定Content-Type，默认为: text/html 
spring.thymeleaf.enabled 
是否允许MVC使用Thymeleaf，默认为: true 
spring.thymeleaf.encoding 
指定模板的编码，默认为: UTF-8 
spring.thymeleaf.excluded-view-names 
指定不使用模板的视图名称，多个以逗号分隔. 
spring.thymeleaf.mode 
指定模板的模式，具体查看StandardTemplateModeHandlers，默认为: HTML5 
spring.thymeleaf.prefix 
指定模板的前缀，默认为:classpath:/templates/ 
spring.thymeleaf.suffix 
指定模板的后缀，默认为:.html 
spring.thymeleaf.template-resolver-order 
指定模板的解析顺序，默认为第一个. 
spring.thymeleaf.view-names 
指定使用模板的视图名，多个以逗号分隔.

mustcache

spring.mustache.cache 
是否Enable template caching. 
spring.mustache.charset 
指定Template的编码. 
spring.mustache.check-template-location 
是否检查默认的路径是否存在. 
spring.mustache.content-type 
指定Content-Type. 
spring.mustache.enabled 
是否开启mustcache的模板支持. 
spring.mustache.prefix 
指定模板的前缀，默认: classpath:/templates/ 
spring.mustache.suffix 
指定模板的后缀，默认: .html 
spring.mustache.view-names 
指定要使用模板的视图名.

groovy模板

spring.groovy.template.allow-request-override 
指定HttpServletRequest的属性是否可以覆盖controller的model的同名项 
spring.groovy.template.allow-session-override 
指定HttpSession的属性是否可以覆盖controller的model的同名项 
spring.groovy.template.cache 
是否开启模板缓存. 
spring.groovy.template.charset 
指定Template编码. 
spring.groovy.template.check-template-location 
是否检查模板的路径是否存在. 
spring.groovy.template.configuration.auto-escape 
是否在渲染模板时自动排查model的变量，默认为: false 
spring.groovy.template.configuration.auto-indent 
是否在渲染模板时自动缩进，默认为false 
spring.groovy.template.configuration.auto-indent-string 
如果自动缩进启用的话，是使用SPACES还是TAB，默认为: SPACES 
spring.groovy.template.configuration.auto-new-line 
渲染模板时是否要输出换行，默认为false 
spring.groovy.template.configuration.base-template-class 
指定template base class. 
spring.groovy.template.configuration.cache-templates 
是否要缓存模板，默认为true 
spring.groovy.template.configuration.declaration-encoding 
在写入declaration header时使用的编码 
spring.groovy.template.configuration.expand-empty-elements 
是使用
这种形式，还是
这种展开模式，默认为: false) 
spring.groovy.template.configuration.locale 
指定template locale. 
spring.groovy.template.configuration.new-line-string 
当启用自动换行时，换行的输出，默认为系统的line.separator属性的值 
spring.groovy.template.configuration.resource-loader-path 
指定groovy的模板路径，默认为classpath:/templates/ 
spring.groovy.template.configuration.use-double-quotes 
指定属性要使用双引号还是单引号，默认为false 
spring.groovy.template.content-type 
指定Content-Type. 
spring.groovy.template.enabled 
是否开启groovy模板的支持. 
spring.groovy.template.expose-request-attributes 
设定所有request的属性在merge到模板的时候，是否要都添加到model中. 
spring.groovy.template.expose-session-attributes 
设定所有request的属性在merge到模板的时候，是否要都添加到model中. 
spring.groovy.template.expose-spring-macro-helpers 
设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用 
spring.groovy.template.prefix 
指定模板的前缀. 
spring.groovy.template.request-context-attribute 
指定RequestContext属性的名. 
spring.groovy.template.resource-loader-path 
指定模板的路径，默认为: classpath:/templates/ 
spring.groovy.template.suffix 
指定模板的后缀 
spring.groovy.template.view-names 
指定要使用模板的视图名称.

http

spring.hateoas.apply-to-primary-object-mapper 
设定是否对object mapper也支持HATEOAS，默认为: true 
spring.http.converters.preferred-json-mapper 
是否优先使用JSON mapper来转换. 
spring.http.encoding.charset 
指定http请求和相应的Charset，默认: UTF-8 
spring.http.encoding.enabled 
是否开启http的编码支持，默认为true 
spring.http.encoding.force 
是否强制对http请求和响应进行编码，默认为true

json

spring.jackson.date-format 
指定日期格式，比如yyyy-MM-dd HH:mm:ss，或者具体的格式化类的全限定名 
spring.jackson.deserialization 
是否开启Jackson的反序列化 
spring.jackson.generator 
是否开启json的generators. 
spring.jackson.joda-date-time-format 
指定Joda date/time的格式，比如yyyy-MM-dd HH:mm:ss). 如果没有配置的话，dateformat会作为backup 
spring.jackson.locale 
指定json使用的Locale. 
spring.jackson.mapper 
是否开启Jackson通用的特性. 
spring.jackson.parser 
是否开启jackson的parser特性. 
spring.jackson.property-naming-strategy 
指定PropertyNamingStrategy (CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES)或者指定PropertyNamingStrategy子类的全限定类名. 
spring.jackson.serialization 
是否开启jackson的序列化. 
spring.jackson.serialization-inclusion 
指定序列化时属性的inclusion方式，具体查看JsonInclude.Include枚举. 
spring.jackson.time-zone 
指定日期格式化时区，比如America/Los_Angeles或者GMT+10.

jersey

spring.jersey.filter.order 
指定Jersey filter的order，默认为: 0 
spring.jersey.init 
指定传递给Jersey的初始化参数. 
spring.jersey.type 
指定Jersey的集成类型，可以是servlet或者filter.

PROFILES

spring.profiles.active= # comma list of active profiles 
spring.profiles.include= # unconditionally activate the specified comma separated profiles

APPLICATION SETTINGS (SpringApplication)

spring.main.sources= 
spring.main.web-environment= # detect by default 
spring.main.show-banner=true 
spring.main….= # see class for all properties

LOGGING

logging.path=/var/logs 
logging.file=myapp.log 
logging.config= # location of config file (default classpath:logback.xml for logback) 
logging.level.*= # levels for loggers, e.g. “logging.level.org.springframework=DEBUG” (TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)

IDENTITY (ContextIdApplicationContextInitializer)

spring.application.name= 
spring.application.index=

EMBEDDED SERVER CONFIGURATION (ServerProperties)

server.port=8080 
server.address= # bind to a specific NIC 
server.session-timeout= # session timeout in seconds 
server.context-parameters.*= # Servlet context init parameters, e.g. server.context-parameters.a=alpha 
server.context-path= # the context path, defaults to ‘/’ 
server.servlet-path= # the servlet path, defaults to ‘/’ 
server.ssl.enabled=true # if SSL support is enabled 
server.ssl.client-auth= # want or need 
server.ssl.key-alias= 
server.ssl.ciphers= # supported SSL ciphers 
server.ssl.key-password= 
server.ssl.key-store= 
server.ssl.key-store-password= 
server.ssl.key-store-provider= 
server.ssl.key-store-type= 
server.ssl.protocol=TLS 
server.ssl.trust-store= 
server.ssl.trust-store-password= 
server.ssl.trust-store-provider= 
server.ssl.trust-store-type= 
server.tomcat.access-log-pattern= # log pattern of the access log 
server.tomcat.access-log-enabled=false # is access logging enabled 
server.tomcat.internal-proxies=10\.\d{1,3}\.\d{1,3}\.\d{1,3}|\ 
192\.168\.\d{1,3}\.\d{1,3}|\ 
169\.254\.\d{1,3}\.\d{1,3}|\ 
127\.\d{1,3}\.\d{1,3}\.\d{1,3} # regular expression matching trusted IP addresses 
server.tomcat.protocol-header=x-forwarded-proto # front end proxy forward header 
server.tomcat.port-header= # front end proxy port header 
server.tomcat.remote-ip-header=x-forwarded-for 
server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp) 
server.tomcat.background-processor-delay=30; # in seconds 
server.tomcat.max-http-header-size= # maximum size in bytes of the HTTP message header 
server.tomcat.max-threads = 0 # number of threads in protocol handler 
server.tomcat.uri-encoding = UTF-8 # character encoding to use for URL decoding

SPRING MVC (WebMvcProperties)

spring.mvc.locale= # set fixed locale, e.g. en_UK 
spring.mvc.date-format= # set fixed date format, e.g. dd/MM/yyyy 
spring.mvc.message-codes-resolver-format= # PREFIX_ERROR_CODE / POSTFIX_ERROR_CODE 
spring.mvc.ignore-default-model-on-redirect=true # If the the content of the “default” model should be ignored redirects 
spring.view.prefix= # MVC view prefix 
spring.view.suffix= # … and suffix 
spring.resources.cache-period= # cache timeouts in headers sent to browser 
spring.resources.add-mappings=true # if default mappings should be added

SPRING HATEOS (HateoasProperties)

spring.hateoas.apply-to-primary-object-mapper=true # if the primary mapper should also be configured

HTTP encoding (HttpEncodingProperties)

spring.http.encoding.charset=UTF-8 # the encoding of HTTP requests/responses 
spring.http.encoding.enabled=true # enable http encoding support 
spring.http.encoding.force=true # force the configured encoding

JACKSON (JacksonProperties)

spring.jackson.date-format= # Date format string (e.g. yyyy-MM-dd HH:mm:ss), or a fully-qualified date format class name (e.g. com.fasterxml.jackson.databind.util.ISO8601DateFormat) 
spring.jackson.property-naming-strategy= # One of the constants on Jackson’s PropertyNamingStrategy (e.g. CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES) or the fully-qualified class name of a PropertyNamingStrategy subclass 
spring.jackson.deserialization.*= # see Jackson’s DeserializationFeature 
spring.jackson.generator.*= # see Jackson’s JsonGenerator.Feature 
spring.jackson.mapper.*= # see Jackson’s MapperFeature 
spring.jackson.parser.*= # see Jackson’s JsonParser.Feature 
spring.jackson.serialization.*= # see Jackson’s SerializationFeature

THYMELEAF (ThymeleafAutoConfiguration)

spring.thymeleaf.check-template-location=true 
spring.thymeleaf.prefix=classpath:/templates/ 
spring.thymeleaf.excluded-view-names= # comma-separated list of view names that should be excluded from resolution 
spring.thymeleaf.view-names= # comma-separated list of view names that can be resolved 
spring.thymeleaf.suffix=.html 
spring.thymeleaf.mode=HTML5 
spring.thymeleaf.encoding=UTF-8 
spring.thymeleaf.content-type=text/html # ;charset= is added 
spring.thymeleaf.cache=true # set to false for hot refresh

REEMARKER (FreeMarkerAutoConfiguration)

spring.freemarker.allow-request-override=false 
spring.freemarker.cache=true 
spring.freemarker.check-template-location=true 
spring.freemarker.charset=UTF-8 
spring.freemarker.content-type=text/html 
spring.freemarker.expose-request-attributes=false 
spring.freemarker.expose-session-attributes=false 
spring.freemarker.expose-spring-macro-helpers=false 
spring.freemarker.prefix= 
spring.freemarker.request-context-attribute= 
spring.freemarker.settings.*= 
spring.freemarker.suffix=.ftl 
spring.freemarker.template-loader-path=classpath:/templates/ # comma-separated list 
spring.freemarker.view-names= # whitelist of view names that can be resolved

GROOVY TEMPLATES (GroovyTemplateAutoConfiguration)

spring.groovy.template.cache=true 
spring.groovy.template.charset=UTF-8 
spring.groovy.template.configuration.*= # See Groovy’s TemplateConfiguration 
spring.groovy.template.content-type=text/html 
spring.groovy.template.prefix=classpath:/templates/ 
spring.groovy.template.suffix=.tpl 
spring.groovy.template.view-names= # whitelist of view names that can be resolved

VELOCITY TEMPLATES (VelocityAutoConfiguration)

spring.velocity.allow-request-override=false 
spring.velocity.cache=true 
spring.velocity.check-template-location=true 
spring.velocity.charset=UTF-8 
spring.velocity.content-type=text/html 
spring.velocity.date-tool-attribute= 
spring.velocity.expose-request-attributes=false 
spring.velocity.expose-session-attributes=false 
spring.velocity.expose-spring-macro-helpers=false 
spring.velocity.number-tool-attribute= 
spring.velocity.prefer-file-system-access=true # prefer file system access for template loading 
spring.velocity.prefix= 
spring.velocity.properties.*= 
spring.velocity.request-context-attribute= 
spring.velocity.resource-loader-path=classpath:/templates/ 
spring.velocity.suffix=.vm 
spring.velocity.toolbox-config-location= # velocity Toolbox config location, for example “/WEB-INF/toolbox.xml” 
spring.velocity.view-names= # whitelist of view names that can be resolved

JERSEY (JerseyProperties)

spring.jersey.type=servlet # servlet or filter 
spring.jersey.init= # init params 
spring.jersey.filter.order=

INTERNATIONALIZATION (MessageSourceAutoConfiguration)

spring.messages.basename=messages 
spring.messages.cache-seconds=-1 
spring.messages.encoding=UTF-8

SECURITY (SecurityProperties)

security.user.name=user # login username 
security.user.password= # login password 
security.user.role=USER # role assigned to the user 
security.require-ssl=false # advanced settings … 
security.enable-csrf=false 
security.basic.enabled=true 
security.basic.realm=Spring 
security.basic.path= # /** 
security.filter-order=0 
security.headers.xss=false 
security.headers.cache=false 
security.headers.frame=false 
security.headers.content-type=false 
security.headers.hsts=all # none / domain / all 
security.sessions=stateless # always / never / if_required / stateless 
security.ignored=false